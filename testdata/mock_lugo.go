// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/makeitplay/client-player-go/lugo (interfaces: FootballServer)

// Package testdata is a generated GoMock package.
package testdata

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	lugo "github.com/makeitplay/client-player-go/lugo"
	reflect "reflect"
)

// MockFootballServer is a mock of FootballServer interface
type MockFootballServer struct {
	ctrl     *gomock.Controller
	recorder *MockFootballServerMockRecorder
}

// MockFootballServerMockRecorder is the mock recorder for MockFootballServer
type MockFootballServerMockRecorder struct {
	mock *MockFootballServer
}

// NewMockFootballServer creates a new mock instance
func NewMockFootballServer(ctrl *gomock.Controller) *MockFootballServer {
	mock := &MockFootballServer{ctrl: ctrl}
	mock.recorder = &MockFootballServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFootballServer) EXPECT() *MockFootballServerMockRecorder {
	return m.recorder
}

// JoinATeam mocks base method
func (m *MockFootballServer) JoinATeam(arg0 *lugo.JoinRequest, arg1 lugo.Football_JoinATeamServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "JoinATeam", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// JoinATeam indicates an expected call of JoinATeam
func (mr *MockFootballServerMockRecorder) JoinATeam(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "JoinATeam", reflect.TypeOf((*MockFootballServer)(nil).JoinATeam), arg0, arg1)
}

// SendOrders mocks base method
func (m *MockFootballServer) SendOrders(arg0 context.Context, arg1 *lugo.OrderSet) (*lugo.OrderResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendOrders", arg0, arg1)
	ret0, _ := ret[0].(*lugo.OrderResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendOrders indicates an expected call of SendOrders
func (mr *MockFootballServerMockRecorder) SendOrders(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendOrders", reflect.TypeOf((*MockFootballServer)(nil).SendOrders), arg0, arg1)
}
